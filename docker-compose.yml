version: "3.9"

services:
    nodeapp: 
        build:
            context: .
            dockerfile: Dockerfile 
        image: nodeapp
        container_name: nodeapp
        ports: 
            - "8080:8080"
        networks: 
            - nodeapp_network
        depends_on:
            - mongodb1
            - mongodb2
            - mongodb3
    mongodb1:
        build:
            context: ./docker-mongodb
            dockerfile: Dockerfile
        image: mongodb
        container_name: mongodb1
        hostname: mongodb1
        command: [ "--replSet", "rs", "--bind_ip_all" ]
        healthcheck:
            test: test $$(echo "rs.initiate({_id:'rs',members:[{_id:0,host:\"mongodb1:27017\"},{_id:1,host:\"mongodb2:27017\"},{_id:2,host:\"mongodb3:27017\"}]}).ok || rs.status().ok" | mongo --quiet) -eq 1
            interval: 10s
            start_period: 30s
        networks:
            - nodeapp_network
    mongodb2:
        build:
            context: ./docker-mongodb
            dockerfile: Dockerfile
        image: mongodb
        container_name: mongodb2
        hostname: mongodb2
        command: ["--replSet", "rs", "--bind_ip_all"]
        networks:
            - nodeapp_network
    mongodb3:
        build:
            context: ./docker-mongodb
            dockerfile: Dockerfile
        image: mongodb
        container_name: mongodb3
        hostname: mongodb3
        command: ["--replSet", "rs", "--bind_ip_all"]
        networks:
            - nodeapp_network

networks:
    nodeapp_network:
        driver: bridge
        driver_opts:
            com.docker.network.bridge.name: "brnodeapp"
